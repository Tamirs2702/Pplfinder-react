{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChangeFromParent","label","FormControlLabel","control","Checkbox","checked","onChange","e","target","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","useState","hoveredUserId","setHoveredUserId","checkedBoxed","setCheckedBoxed","localS","localStorage","getItem","parseLocalS","JSON","parse","favorites","setFavorites","handleMouseLeave","handleAddOrRemoveFilter","value","addOrRemove","newCheckBoxed","forEach","item","push","checkConditionToVisible","index","includes","filter","user","length","location","country","map","onMouseEnter","handleMouseEnter","onMouseLeave","onClick","newFavorites","setItem","stringify","handleOnClickFavorite","src","picture","large","alt","name","title","first","last","email","street","number","city","IconButton","Home","Content","Header","setUsers","setIsLoading","fetchUsers","a","axios","get","response","newUsersList","data","results","useEffect","usePeopleFetch","dataLength","next","hasMore","loader","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","history","useHistory","AppBar","position","style","top","Tabs","_e","newValue","indicatorColor","textColor","Tab","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8a6f23fb.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Text = styled.div`\n  font-size: ${({ size }) => size};\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\n`;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport * as S from \"./style\";\n\nconst Text = ({ size = \"14px\", children, bold }) => {\n  return (\n    <Typography>\n      <S.Text size={size} bold={bold}>\n        {children}\n      </S.Text>\n    </Typography>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Spinner = ({ size, color, thickness, variant }) => {\n  return (\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\n\nexport const CheckBox = styled.div``;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as S from \"./style\";\n\nconst CheckBox = ({ isChecked, onChangeFromParent, label }) => {\n  const handleChange = (e) => {\n      if (e.target.checked) {\n        onChangeFromParent && onChangeFromParent(label,\"add\");\n      } else{\n        onChangeFromParent && onChangeFromParent(label,\"remove\");\n      }\n\n  };\n  return (\n    <S.CheckBox>\n      <FormControlLabel\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\n        label={label}\n      />\n    </S.CheckBox>\n  );\n};\n\nexport default CheckBox;","import styled from \"styled-components\";\n\nexport const UserList = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  width: 500px;\n  height: calc(100vh - 270px);\n  margin-block-start: 30px;\n  overflow-y: auto;\n`;\n\nexport const User = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n`;\n\nexport const UserInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-height: 128px;\n  gap: 2px;\n  overflow: hidden;\n`;\n\nexport const UserPicture = styled.img`\n  border-radius: 45%;\n`;\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const IconButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  transition: opacity 0.2s ease-in-out;\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin-inline-end: 8px;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\n\nconst UserList = ({ users, isLoading }) => {\n  const [hoveredUserId, setHoveredUserId] = useState();\n  const [checkedBoxed, setCheckedBoxed] = useState([]);\n  const localS = localStorage.getItem(\"Favorites\");\n  const parseLocalS = localS ? JSON.parse(localS) : [];\n  const [favorites, setFavorites] = useState(parseLocalS);\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  const handleAddOrRemoveFilter = (value,addOrRemove) => {\n    let newCheckBoxed = [];\n\n    if(addOrRemove === \"add\") {\n      checkedBoxed.forEach(item => {\n        newCheckBoxed.push(item);\n      })\n      newCheckBoxed.push(value);\n    } else {\n      checkedBoxed.forEach(item => {\n        if (value !== item) {\n          newCheckBoxed.push(item);\n        }\n      })\n    }\n    setCheckedBoxed(newCheckBoxed);\n  }\n\n  const checkConditionToVisible = (index) => {\n    return index === hoveredUserId || favorites.includes(users[index])\n  }\n\n  const handleOnClickFavorite = (index) => {\n    let newFavorites = []\n    if(favorites.includes(users[index])) {\n      favorites.forEach(item => {\n        if(users[index] != item){\n          newFavorites.push(item)\n        }\n      })\n    }\n    else{\n       favorites.forEach(item => {\n          newFavorites.push(item);\n       })\n      newFavorites.push(users[index])\n\n    }\n\n    setFavorites(newFavorites)\n    localStorage.setItem(\"Favorites\", JSON.stringify(newFavorites))\n  }\n\n  return (\n    <S.UserList>\n      <S.Filters>\n        <CheckBox value=\"BR\" label=\"Brazil\" onChangeFromParent={handleAddOrRemoveFilter}/>\n        <CheckBox value=\"AU\" label=\"Australia\" onChangeFromParent={handleAddOrRemoveFilter}/>\n        <CheckBox value=\"CA\" label=\"Canada\" onChangeFromParent={handleAddOrRemoveFilter}/>\n        <CheckBox value=\"DE\" label=\"Germany\" onChangeFromParent={handleAddOrRemoveFilter}/>\n      </S.Filters>\n      <S.List>\n        {users\n        .filter(user => {\n          if(checkedBoxed.length === 0) {\n            return true;\n          }\n\n          return checkedBoxed.includes(user.location.country)\n        })\n        .map((user, index) => {\n          return (\n            <S.User\n              key={index}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n              onClick={() => handleOnClickFavorite(index)}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={checkConditionToVisible(index)}>\n                <IconButton>\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;","import styled from \"styled-components\";\n\nexport const Home = styled.div`\n  display: flex;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-block-start: 100px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n`;\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  max-width: 400px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport Text from \"components/Text\";\nimport UserList from \"components/UserList\";\nimport { usePeopleFetch } from \"hooks\";\nimport * as S from \"./style\";\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\nconst Home = () => {\n  const { users, isLoading, fetchUsers } = usePeopleFetch();\n\n  return (\n      <S.Home>\n        <S.Content>\n          <S.Header>\n            <Text size=\"64px\" bold>\n              PplFinder\n            </Text>\n          </S.Header>\n          <InfiniteScroll\n            dataLength={users.length} //This is important field to render the next data\n            next={fetchUsers}\n            hasMore={true}\n            loader={<h4>Loading...</h4>}\n          >\n          <UserList users={users} isLoading={isLoading} />\n        </InfiniteScroll>\n        </S.Content>\n      </S.Home>\n\n  );\n};\n\nexport default Home;","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  async function fetchUsers() {\n      setIsLoading(true);\n      const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\n      setIsLoading(false);\n      let newUsersList = [];\n\n      users.forEach(item => {\n          newUsersList.push(item);\n      })\n\n    response.data.results.forEach(item => {\n      newUsersList.push(item);\n      })\n\n     setUsers(newUsersList);\n  }\n\n  return { users, isLoading, fetchUsers };\n};\nasync function buildList(items, token){\n  try {\n      const list = []\n      let config = ''\n\n      for (item of items.items) {\n          config = {\n              method: 'get',\n              url: 'https://randomuser.me/api/?results=25&page=1' + item.id,\n              headers: {\n                  'Authorization': 'Bearer ' + token,\n                  'Accept': 'application/json'\n              }\n          }\n\n          const buildArray = (await axios(config)).data\n          list.push(JSON.parse(buildArray))\n      }\n\n      return list\n\n  } catch (err) {\n      throw Error ('buildList error: ', err.message)\n  }\n  const filteredCountries = countries.filter(\n    country =>\n      country.name.toLowerCase().includes(searchedCountry.toLowerCase()) &&\n      country.region.toLowerCase().includes(region.toLocaleLowerCase())\n  );\n  }","import React, {useState} from \"react\";\nimport Text from \"components/Text\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nimport * as S from \"../../components/UserList/style\";\nimport * as H from \"../../pages/Home/style\";\n\nconst Favorites = () => {\n  const localS = localStorage.getItem(\"Favorites\");\n  const parseLocalS = localS ? JSON.parse(localS) : [];\n  const [favorites, setFavorites] = useState(parseLocalS);\n\n  const handleOnClickFavorite = (index) => {\n    let newFavorites = []\n     favorites.forEach(item => {\n         if(favorites[index] != item)\n           newFavorites.push(item);\n     })\n\n\n    setFavorites(newFavorites)\n    localStorage.setItem(\"Favorites\", JSON.stringify(newFavorites))\n  }\n\n  return (\n    <H.Content>\n          <H.Header>\n            <Text size=\"64px\" bold>\n              PplFinder - Favorites\n            </Text>\n          </H.Header>\n      <S.UserList>\n      <S.List>\n        {favorites\n        .map((user, index) => {\n          return (\n            <S.User\n              key={index}\n              onClick={() => handleOnClickFavorite(index)}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={true}>\n                <IconButton>\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n      </S.List>\n    </S.UserList>\n   </H.Content>\n  );\n};\n\nexport default Favorites;","import React from \"react\";\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst ThemeProvider = ({ children }) => {\n  const overrides = {\n    MuiTab: {\n      root: {\n        backgroundColor: \"#303030\",\n      },\n    },\n  };\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        overrides,\n        palette: {\n          type: \"dark\",\n          primary: {\n            main: \"#84ffff\",\n          },\n          error: {\n            main: \"#f06292\",\n          },\n        },\n      }),\n    []\n  );\n\n  return (\n    <Provider theme={theme}>\n      <CssBaseline />\n      {children}\n    </Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, {useEffect, useState} from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const [value, setValue] = useState(0);\n  const history = useHistory()\n\n  useEffect(() => {\n    history.push(\"/\")\n  }, []);\n\n  const handleChange = (_e, newValue) => {\n    setValue(newValue);\n    if(newValue){\n        history.push(\"/favorites\")\n    }\n    else{\n        history.push(\"/\")\n    }\n  };\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Navigation\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <Tab label=\"Home\" index={0} />\n        <Tab label=\"Favorites\" index={1}/>\n      </Tabs>\n\n    </AppBar>\n\n  );\n};\n\nexport default NavBar;","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Home, Favorites } from \"pages\";\nimport { ThemeProvider } from \"theme\";\nimport NavBar from \"components/NavBar\";\n\nconst AppRouter = () => {\n  return (\n    <ThemeProvider>\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/favorites\" component={Favorites} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default AppRouter;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"AppRouter\";\n\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}